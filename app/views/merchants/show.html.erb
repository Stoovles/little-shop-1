<% if current_user %>

<section class="statistics">
  <h2>Statistics</h2>
  <% if @popular_five %>
  <div class="five_most">
    <h3>Most Popular Items</h3>
    <% @popular_five.each do |item| %>
    <div class="popular">
      <a><img src=<%= item.image_url %> class="tiny-image" alt="image of <%= item.item_name %>"></a>
      <%= item.item_name %> -
      <%= item.quantity_sold %> bought
    </div>
    <% end %>
    <div class="percentage-sold">
      Total Items Sold: <%= current_user.total_quantity_sold %>
      <br>
      Percentage of Inventory Sold: <%= current_user.percentage_sold.round(2) %>%

      <script>
        var total = <%= @total %>;
        var sold = <%= @sold %>;

        var canvas = d3.select(".percentage-sold").append("svg")
        .attr("width", 500)
        .attr("height", 500);

        var pie = canvas.append("rect")
          .attr("height", 10)
          .attr("width", total)

          .attr("fill","red");

        var sold = canvas.append("rect")
          .attr("height", 10)
          .attr("width", sold)

          .attr("fill", "blue");
      </script>
      <script type="text/javascript">
var w = 300,                        //width
h = 300,                            //height
r = 100,                            //radius
color = d3.scale.category20c();     //builtin range of colors
data = @three_states_array
[{"label":"one", "value":20},
        {"label":"two", "value":50},
        {"label":"three", "value":30}];

var vis = d3.select("body")
    .append("svg:svg")              //create the SVG element inside the <body>
    .data([data])                   //associate our data with the document
        .attr("width", w)           //set the width and height of our visualization (these will be attributes of the <svg> tag
        .attr("height", h)
    .append("svg:g")                //make a group to hold our pie chart
        .attr("transform", "translate(" + r + "," + r + ")")    //move the center of the pie chart from 0, 0 to radius, radius
var arc = d3.svg.arc()              //this will create <path> elements for us using arc data
    .outerRadius(r);
var pie = d3.layout.pie()           //this will create arc data for us given a list of values
    .value(function(d) { return d.value; });    //we must tell it out to access the value of each element in our data array
var arcs = vis.selectAll("g.slice")     //this selects all <g> elements with class slice (there aren't any yet)
    .data(pie)                          //associate the generated pie data (an array of arcs, each having startAngle, endAngle and value properties)
    .enter()                            //this will create <g> elements for every "extra" data element that should be associated with a selection. The result is creating a <g> for every object in the data array
        .append("svg:g")                //create a group to hold each slice (we will have a <path> and a <text> element associated with each slice)
            .attr("class", "slice");    //allow us to style things in the slices (like text)
    arcs.append("svg:path")
            .attr("fill", function(d, i) { return color(i); } ) //set the color for each slice to be chosen from the color function defined above
            .attr("d", arc);                                    //this creates the actual SVG path using the associated data (pie) with the arc drawing function
    arcs.append("svg:text")                                     //add a label to each slice
            .attr("transform", function(d) {                    //set the label's origin to the center of the arc
            //we have to make sure to set these before calling arc.centroid
            d.innerRadius = 0;
            d.outerRadius = r;
            return "translate(" + arc.centroid(d) + ")";        //this gives us a pair of coordinates like [50, 50]
        })
        .attr("text-anchor", "middle")                          //center the text on it's origin
        .text(function(d, i) { return data[i].label; });        //get the label from our original data array

</script>

    </div>
    Top 3 States -
    <% @top_3_states.each do |relation| %>
      <%= relation.state %>: <%= relation.sum %>
    <% end %>
    Top 3 Cities -
    <% @top_3_cities.each do |relation| %>
      <%= relation.citystate %>: <%= relation.sum %>
    <% end %>
  </div>
  <% end %>
  <div>
  <h3>Top Customers</h3>
  <% if @top_user %>
      Top Customer (orders): <%= @top_user.name %> - <%= @top_user.count %><br>
      Top Customer (items): <%= @top_user_by_items.name %> - <%= @top_user_by_items.sum %><br>
      Top Customers (revenue):<% @top_users_by_revenue.each do |customer| %><br>
        <%= customer.name %> - <%= number_to_currency(customer.sum) %>
      <% end %>
  <% end %>
  </div>

</section>


<br>

  <div class='order-card'>
    <h3>Name: <%= current_user.name %></h3>
    <p>Street Address: <%= current_user.street_address %></p>
    <p>City: <%= current_user.city %></p>
    <p>State: <%= current_user.state %></p>
    <p>Zip Code: <%= current_user.zip_code %></p>
    <p>Email Address: <%= current_user.email_address %></p>
    <%= link_to "My Items", dashboard_items_path, id: "button" %>
    <%= link_to "My Coupons", dashboard_coupons_path, id: "button" %>
  </div>

  <div class='pending-orders'>
    <% @orders.each do |order| %>
    <div class="order-card">
      <h3><%= link_to "Order ID: #{order.id}", dashboard_order_path(order) %></h3>
      <p>Ordered On: <%= order.created_at %></p>
      <p>Quantity: <%= @merchant.my_item_count(order) %></p>
      <p>Total Price: <%= @merchant.my_total(order) %></p>
    </div>
    <% end %>
  </div>


<% else redirect_to "/public/404" %>
<% end %>
